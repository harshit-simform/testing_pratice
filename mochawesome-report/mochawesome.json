{
  "stats": {
    "suites": 10,
    "tests": 22,
    "passes": 20,
    "pending": 1,
    "failures": 1,
    "start": "2023-07-11T07:02:00.293Z",
    "end": "2023-07-11T07:02:04.857Z",
    "duration": 4564,
    "testsRegistered": 22,
    "passPercent": 95.23809523809523,
    "pendingPercent": 4.545454545454546,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9e167268-a6c6-452b-98d1-78ad862f55ef",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6573167a-846a-4fd4-bb74-fe93b4f2f005",
          "title": "-------------api test--------",
          "fullFile": "/home/harshit/Documents/testing_pratice/test-case/api.spec.js",
          "file": "/test-case/api.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get user from express api",
              "fullTitle": "-------------api test-------- Get user from express api",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .get(\"/user\")\n  .end((err, res) => {\n    expect(res.status).to.be.equal(200);\n    expect(res.body).to.have.all.keys(\"status\", \"data\");\n    expect(res.body.data)\n      .to.be.an(\"Array\")\n      .with.a.lengthOf(1)\n      .and.deep.include({ id: 1 });\n    done();\n  });",
              "err": {},
              "uuid": "6391cc4d-a681-41ec-b0c6-cfb032dc1bc9",
              "parentUUID": "6573167a-846a-4fd4-bb74-fe93b4f2f005",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6391cc4d-a681-41ec-b0c6-cfb032dc1bc9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f6bead61-a784-4fbd-9ffb-45115b3b7e49",
          "title": "------check types with assert----",
          "fullFile": "/home/harshit/Documents/testing_pratice/test-case/chai.spec.js",
          "file": "/test-case/chai.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check string",
              "fullTitle": "------check types with assert---- check string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.typeOf(username, \"string\");",
              "err": {},
              "uuid": "054302c1-98a3-4a46-b7bf-2a64c8262db3",
              "parentUUID": "f6bead61-a784-4fbd-9ffb-45115b3b7e49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check match",
              "fullTitle": "------check types with assert---- check match",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(username, \"harshit\");",
              "err": {},
              "uuid": "9c37eeae-7785-486b-9bf3-8ee76e15fd2d",
              "parentUUID": "f6bead61-a784-4fbd-9ffb-45115b3b7e49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check length",
              "fullTitle": "------check types with assert---- check length",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.lengthOf(userList, 1);",
              "err": {},
              "uuid": "5c8bf311-645c-491f-9e31-9e858ce804eb",
              "parentUUID": "f6bead61-a784-4fbd-9ffb-45115b3b7e49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "054302c1-98a3-4a46-b7bf-2a64c8262db3",
            "9c37eeae-7785-486b-9bf3-8ee76e15fd2d",
            "5c8bf311-645c-491f-9e31-9e858ce804eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "734134f4-4ead-4d67-b708-ccbadf7144b9",
          "title": "------check types with should----",
          "fullFile": "/home/harshit/Documents/testing_pratice/test-case/chai.spec.js",
          "file": "/test-case/chai.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check string",
              "fullTitle": "------check types with should---- check string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "username.should.be.a(\"string\");",
              "err": {},
              "uuid": "95a9d659-8c31-487c-9527-76984d9dab3b",
              "parentUUID": "734134f4-4ead-4d67-b708-ccbadf7144b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check match",
              "fullTitle": "------check types with should---- check match",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "username.should.equal(\"harshit\");",
              "err": {},
              "uuid": "3ca35985-3872-4205-9176-c82daa493e61",
              "parentUUID": "734134f4-4ead-4d67-b708-ccbadf7144b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check length",
              "fullTitle": "------check types with should---- check length",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "userList.should.have.a.lengthOf(1);",
              "err": {},
              "uuid": "b3178e38-ef72-4255-a784-8ed212ffc4c3",
              "parentUUID": "734134f4-4ead-4d67-b708-ccbadf7144b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95a9d659-8c31-487c-9527-76984d9dab3b",
            "3ca35985-3872-4205-9176-c82daa493e61",
            "b3178e38-ef72-4255-a784-8ed212ffc4c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5be37f7a-33d4-43b3-b790-d37c237c327d",
          "title": "------check types with expect----",
          "fullFile": "/home/harshit/Documents/testing_pratice/test-case/chai.spec.js",
          "file": "/test-case/chai.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check string",
              "fullTitle": "------check types with expect---- check string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(username).to.be.a(\"string\");",
              "err": {},
              "uuid": "96997e49-4871-488f-ba29-e1321e791b95",
              "parentUUID": "5be37f7a-33d4-43b3-b790-d37c237c327d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check match",
              "fullTitle": "------check types with expect---- check match",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(username).to.equal(\"harshit\");",
              "err": {},
              "uuid": "ae56e29a-9d1a-4ea6-be0a-f703e4d6d77b",
              "parentUUID": "5be37f7a-33d4-43b3-b790-d37c237c327d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check length",
              "fullTitle": "------check types with expect---- check length",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(userList).to.have.a.lengthOf(1);",
              "err": {},
              "uuid": "c31aba20-dae2-419c-ba2c-88320c6e25f2",
              "parentUUID": "5be37f7a-33d4-43b3-b790-d37c237c327d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check all property",
              "fullTitle": "------check types with expect---- check all property",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(obj).to.have.all.keys(\"users\", \"address\", \"phone_no\");",
              "err": {},
              "uuid": "0b397868-0c27-4b78-bc45-3c63c2605e25",
              "parentUUID": "5be37f7a-33d4-43b3-b790-d37c237c327d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check all property",
              "fullTitle": "------check types with expect---- check all property",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(obj).to.have.a.property(\"users\").with.lengthOf(3);\n// for only checking that the array conatin this members or not\nexpect(obj)\n  .to.have.a.property(\"phone_no\")\n  .to.be.a(\"array\")\n  .with.lengthOf(2)\n  .and.have.members([987654321, 12345678]);\n// for checking that the array conatins the members in same order as provided in the test case\nexpect(obj)\n  .to.have.a.property(\"phone_no\")\n  .to.be.a(\"array\")\n  .with.lengthOf(2)\n  .and.deep.equal([12345678, 987654321]);",
              "err": {},
              "uuid": "3c81947d-67fb-442e-bc31-56dbc6a708a8",
              "parentUUID": "5be37f7a-33d4-43b3-b790-d37c237c327d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check nested property values",
              "fullTitle": "------check types with expect---- check nested property values",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(obj).to.have.a.nested.property(\"address.country\").equal(\"India\");\nexpect(obj).to.have.a.nested.include({ \"address.state\": \"Gujarat\" });",
              "err": {},
              "uuid": "11fc69d1-ee18-4965-819d-571ed76ec55d",
              "parentUUID": "5be37f7a-33d4-43b3-b790-d37c237c327d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96997e49-4871-488f-ba29-e1321e791b95",
            "ae56e29a-9d1a-4ea6-be0a-f703e4d6d77b",
            "c31aba20-dae2-419c-ba2c-88320c6e25f2",
            "0b397868-0c27-4b78-bc45-3c63c2605e25",
            "3c81947d-67fb-442e-bc31-56dbc6a708a8",
            "11fc69d1-ee18-4965-819d-571ed76ec55d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0501f697-1af0-41bb-8444-5a9b4f84c960",
          "title": "hooks tests",
          "fullFile": "/home/harshit/Documents/testing_pratice/test-case/hooks.spec.js",
          "file": "/test-case/hooks.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"hooks tests\"",
              "fullTitle": "hooks tests \"before all\" hook in \"hooks tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"will called at first before executing any test case\");",
              "err": {},
              "uuid": "3eaa46b2-7176-47b8-85d5-e19c2a96a3ce",
              "parentUUID": "0501f697-1af0-41bb-8444-5a9b4f84c960",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"hooks tests\"",
              "fullTitle": "hooks tests \"before each\" hook in \"hooks tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"will called before each test case is being executed\");",
              "err": {},
              "uuid": "5cd8ba6d-5754-4b45-b606-8d0c319743fc",
              "parentUUID": "0501f697-1af0-41bb-8444-5a9b4f84c960",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"hooks tests\"",
              "fullTitle": "hooks tests \"after all\" hook in \"hooks tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"will called in last when all test case are over\");",
              "err": {},
              "uuid": "449b5e87-9aeb-4147-b634-1b0f8c0838d4",
              "parentUUID": "0501f697-1af0-41bb-8444-5a9b4f84c960",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"hooks tests\"",
              "fullTitle": "hooks tests \"after each\" hook in \"hooks tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"will called after each test case is over\");",
              "err": {},
              "uuid": "860ae1bc-36ad-43a6-b434-491be5c610c3",
              "parentUUID": "0501f697-1af0-41bb-8444-5a9b4f84c960",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "check type",
              "fullTitle": "hooks tests check type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(name).to.be.an(\"string\");",
              "err": {},
              "uuid": "e0b18dfe-1a42-425f-b041-3300530f3dd3",
              "parentUUID": "0501f697-1af0-41bb-8444-5a9b4f84c960",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check value",
              "fullTitle": "hooks tests check value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(name).to.be.equal(\"harshit\");",
              "err": {},
              "uuid": "9b3d84da-4d13-4aa3-aad0-e04521b234fa",
              "parentUUID": "0501f697-1af0-41bb-8444-5a9b4f84c960",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0b18dfe-1a42-425f-b041-3300530f3dd3",
            "9b3d84da-4d13-4aa3-aad0-e04521b234fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2db66599-b2f2-4d8b-8880-f3c80cf134bd",
          "title": "demo check",
          "fullFile": "/home/harshit/Documents/testing_pratice/test-case/hooks.spec.js",
          "file": "/test-case/hooks.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check demo value",
              "fullTitle": "demo check check demo value",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "4b51d0f1-e5b7-436e-a1a5-67908c594055",
              "parentUUID": "2db66599-b2f2-4d8b-8880-f3c80cf134bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "4b51d0f1-e5b7-436e-a1a5-67908c594055"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e73ae6a7-b7b0-4735-8ece-166b0d1dfc02",
          "title": "-------------Mock--------",
          "fullFile": "/home/harshit/Documents/testing_pratice/test-case/mock.spec.js",
          "file": "/test-case/mock.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "count function called",
              "fullTitle": "-------------Mock-------- count function called",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mock = sinon.mock(studentObj);\nconst expt = mock.expects(\"getExternal\");\nexpt.exactly(1).withArgs(40);\nstudentObj.finalMarks(40);\nmock.verify();",
              "err": {},
              "uuid": "811d32c5-e906-4362-9771-833133089030",
              "parentUUID": "e73ae6a7-b7b0-4735-8ece-166b0d1dfc02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "811d32c5-e906-4362-9771-833133089030"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "36deb9d0-6bc5-4647-b945-533e3eccad5e",
          "title": "-------------promise--------",
          "fullFile": "/home/harshit/Documents/testing_pratice/test-case/promise.spec.js",
          "file": "/test-case/promise.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check promise value",
              "fullTitle": "-------------promise-------- check promise value",
              "timedOut": false,
              "duration": 1502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return studentObj.dbData().then(function (result) {\n  expect(result).to.be.equal(10);\n});",
              "err": {},
              "uuid": "6a63c42c-b18d-435c-86ab-3bc2a8d15ea2",
              "parentUUID": "36deb9d0-6bc5-4647-b945-533e3eccad5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check promise value using package",
              "fullTitle": "-------------promise-------- check promise value using package",
              "timedOut": false,
              "duration": 1502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return expect(studentObj.dbData()).to.eventually.equal(10);",
              "err": {},
              "uuid": "423fa697-01dd-4d12-a7a5-d962a1d0ee7e",
              "parentUUID": "36deb9d0-6bc5-4647-b945-533e3eccad5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "api test",
              "fullTitle": "-------------promise-------- api test",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const obj = { status: \"ok\", statusCode: 200 };\nconst apiHit = nock(\"https://jsonplaceholder.typicode.com/\")\n  .get(\"/todos\")\n  .reply(200, obj);\nstudentObj\n  .getDataFromApi()\n  .then(function (data) {\n    expect(data).to.be.eql(obj);\n    done();\n  })\n  .catch((error) => {\n    done(new Error(\"error\" + error));\n  });",
              "err": {},
              "uuid": "a1fd32e2-b4da-4f28-bc8f-589e89ff083d",
              "parentUUID": "36deb9d0-6bc5-4647-b945-533e3eccad5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "db34737c-f145-4f39-a8de-1dcfeb77ac97",
              "title": "-------------promise--------",
              "fullFile": "/home/harshit/Documents/testing_pratice/test-case/promise.spec.js",
              "file": "/test-case/promise.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "check promise value using package",
                  "fullTitle": "-------------promise-------- -------------promise-------- check promise value using package",
                  "timedOut": false,
                  "duration": 1504,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "return studentObj.dbData().then((value) => {\n  expect(value).to.equal(11);\n});",
                  "err": {
                    "message": "AssertionError: expected 10 to equal 11",
                    "estack": "AssertionError: expected 10 to equal 11\n    at /home/harshit/Documents/testing_pratice/test-case/promise.spec.js:24:26",
                    "diff": "- 10\n+ 11\n"
                  },
                  "uuid": "d3953c60-b036-4227-b98e-39c5983fa5a7",
                  "parentUUID": "db34737c-f145-4f39-a8de-1dcfeb77ac97",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "d3953c60-b036-4227-b98e-39c5983fa5a7"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1504,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "6a63c42c-b18d-435c-86ab-3bc2a8d15ea2",
            "423fa697-01dd-4d12-a7a5-d962a1d0ee7e",
            "a1fd32e2-b4da-4f28-bc8f-589e89ff083d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3017,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6d7b4c9-505d-4941-b8cb-fabc5fab148a",
          "title": "-------stubs------",
          "fullFile": "/home/harshit/Documents/testing_pratice/test-case/stub.spec.js",
          "file": "/test-case/stub.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "function argument check",
              "fullTitle": "-------stubs------ function argument check",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const external = sinon.stub(studentObj, \"getExternal\");\n// const internal = sinon.stub(studentObj, \"getInternal\");\n// external.withArgs(40).returns(10);\n// internal.withArgs(40).returns(10);\nconst final = sinon.stub(studentObj, \"finalMarks\");\nfinal.withArgs(40).returns(10);\nexpect(studentObj.finalMarks(40)).to.be.equal(10);",
              "err": {},
              "uuid": "97783a0c-b047-4823-ae31-7f843c898f6e",
              "parentUUID": "d6d7b4c9-505d-4941-b8cb-fabc5fab148a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97783a0c-b047-4823-ae31-7f843c898f6e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}